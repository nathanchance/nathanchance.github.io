<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nathan Chancellor</title>
    <link>https://nathanchance.dev/</link>
    <description>Recent content on Nathan Chancellor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 01 Apr 2021 10:25:53 -0700</lastBuildDate><atom:link href="https://nathanchance.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>March 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/march-2021-cbl-work/</link>
      <pubDate>Thu, 01 Apr 2021 10:25:53 -0700</pubDate>
      
      <guid>https://nathanchance.dev/posts/march-2021-cbl-work/</guid>
      <description>Another month, another post about the work that I have done as a kernel/compiler developer! One of the highlights this month is that I got LLVM commit access so I can merge my own patches into LLVM, which I did twice so far.
Linux kernel patches   powerpc/fadump: Mark fadump_calculate_reserve_size as __init: LLVM 13 switched over to the New Pass Manager (NPM), which has impacted some inlining decisions, which in turn exposed some bugs in section annotations.</description>
    </item>
    
    <item>
      <title>February 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/february-2021-cbl-work/</link>
      <pubDate>Sun, 28 Feb 2021 00:01:20 -0700</pubDate>
      
      <guid>https://nathanchance.dev/posts/february-2021-cbl-work/</guid>
      <description>As some of you may or may not know by now, I am now employed by the Linux Foundation to help improve Linux security. The primary way that I am doing that is through the work I do for ClangBuiltLinux, of which I am an official maintainer.
Linux kernel patches First and foremost, I am a Linux kernel developer, meaning that I love sending kernel patches. Getting familiar with git send-email and the standard Linux kernel workflow can be difficult but now that I am used to it, I find other things cumbersome.</description>
    </item>
    
    <item>
      <title>Working with git bisect</title>
      <link>https://nathanchance.dev/posts/working-with-git-bisect/</link>
      <pubDate>Fri, 17 Apr 2020 15:23:45 -0700</pubDate>
      
      <guid>https://nathanchance.dev/posts/working-with-git-bisect/</guid>
      <description>Before Google+ shut down, I had a post on there giving a brief overview of git bisect, which a lot of people found useful. Unfortunately, I forgot to save it and move it somewhere else before the shutdown deadline. As a result, I am going to redo it here and spice it up a bit.
One caveat before I start: there is great official documentation for git bisect, from which I have taken quite a bit of information.</description>
    </item>
    
    <item>
      <title>The art of git revert</title>
      <link>https://nathanchance.dev/posts/art-of-git-revert/</link>
      <pubDate>Wed, 15 Apr 2020 15:11:58 -0700</pubDate>
      
      <guid>https://nathanchance.dev/posts/art-of-git-revert/</guid>
      <description>I have always loved reading good commit messages and I have tried myself to write good commit messages to inspire others to do the same. I see good commit messages as important for two reasons: it allows people who work on a project afterwards to understand the context behind a change (so that you don&amp;rsquo;t have a denvercoder9 situation) and it allows other people to get familiar with your project by fully understanding the why behind a change.</description>
    </item>
    
    <item>
      <title>Creating WSL 2 distributions from LXC images</title>
      <link>https://nathanchance.dev/posts/wsl2-distros-from-lxc-images/</link>
      <pubDate>Wed, 15 Apr 2020 12:40:20 -0700</pubDate>
      
      <guid>https://nathanchance.dev/posts/wsl2-distros-from-lxc-images/</guid>
      <description>I have been a big fan of Windows Subsystem for Linux 2 as I need Windows for school but I am so used to the command line for remoting into my server and automating various tasks locally. For those of you who do not know, WSL 2 uses a Linux kernel under the hood (which I customize here) and all of the various distributions that you can run are basically containers on top of it.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://nathanchance.dev/about/</link>
      <pubDate>Tue, 14 Apr 2020 19:09:55 -0700</pubDate>
      
      <guid>https://nathanchance.dev/about/</guid>
      <description>I am a 26 year old university student at Grand Canyon University, majoring in Information Technology and a Linux kernel and LLVM hacker, currently employed as an independent contractor through The Linux Foundation to maintain ClangBuiltLinux.
I am interested in performance analysis, compilers, security, and operating systems.
Below are links to some of my open source contributions. If you have any questions about them, feel free to reach out to me with the links on the home page.</description>
    </item>
    
    <item>
      <title>Building and using Cuttlefish</title>
      <link>https://nathanchance.dev/posts/building-using-cuttlefish/</link>
      <pubDate>Fri, 31 Jan 2020 18:52:00 -0700</pubDate>
      
      <guid>https://nathanchance.dev/posts/building-using-cuttlefish/</guid>
      <description>Recently, I stumbled upon a talk that Alistair Delva, a Google engineer, gave at the 2018 Linux Plumbers Conference around Cuttlefish, an Android Virtual Device (AVD) that is used to validate the Android platform virtually (i.e. without a separate device). This is something that is really cool because it makes it easy to follow along with upstream Android development and see what changes they are making under the hood, all from adb shell.</description>
    </item>
    
    <item>
      <title>Building the WSL 2 kernel with Clang</title>
      <link>https://nathanchance.dev/posts/wsl2-kernel-clang/</link>
      <pubDate>Tue, 17 Dec 2019 13:53:23 -0700</pubDate>
      
      <guid>https://nathanchance.dev/posts/wsl2-kernel-clang/</guid>
      <description>Recently, I built a computer for school that I installed Windows 10 Pro on (link to the current specs if you are curious). I was a little bummed about leaving Chrome OS because I was going to lose my local Linux development environment; however, Windows Subsystem for Linux is a thing and it has gotten even better with WSL 2, as it is actually running a Linux kernel so there is full Linux compatibility going forward.</description>
    </item>
    
    <item>
      <title>Downloads</title>
      <link>https://nathanchance.dev/downloads/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nathanchance.dev/downloads/</guid>
      <description>I used to host files on this website but I have offloaded them to other services.
Flash Kernel downloads can be found in their individual repos:
 Nexus 6P OnePlus 5 OnePlus 6 Pixel (XL) Pixel 2 (XL)  Note, these are all unmaintained right now so I wouldn&amp;rsquo;t recommend running them in their current form but it&amp;rsquo;s your device.
TWRP downloads can be found in the threads that referenced them:</description>
    </item>
    
  </channel>
</rss>
