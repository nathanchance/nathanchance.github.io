<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Maintainer on Nathan Chancellor</title>
    <link>https://nathanchance.dev/tags/maintainer/</link>
    <description>Recent content in Maintainer on Nathan Chancellor</description>
    <generator>Hugo -- 0.147.6</generator>
    <language>en</language>
    <lastBuildDate>Fri, 30 May 2025 16:30:00 -0700</lastBuildDate>
    <atom:link href="https://nathanchance.dev/tags/maintainer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>May 2025 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/may-2025-cbl-work/</link>
      <pubDate>Fri, 30 May 2025 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/may-2025-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>April 2025 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/april-2025-cbl-work/</link>
      <pubDate>Wed, 30 Apr 2025 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/april-2025-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>March 2025 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/march-2025-cbl-work/</link>
      <pubDate>Mon, 31 Mar 2025 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/march-2025-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>February 2025 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/february-2025-cbl-work/</link>
      <pubDate>Fri, 28 Feb 2025 17:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/february-2025-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>January 2025 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/january-2025-cbl-work/</link>
      <pubDate>Fri, 31 Jan 2025 17:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/january-2025-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Miscellaneous fixes and improvements: These are fixes and improvements that don&amp;rsquo;t fit into a particular category but are important to ClangBuiltLinux.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GCC 15 fixes: While it may seem like these are not important for a Clang project, the problem resolved by the changes could impact Clang should the developers decide to change the default C standard dialect to C23 like GCC did.&lt;/p&gt;</description>
    </item>
    <item>
      <title>December 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/december-2024-cbl-work/</link>
      <pubDate>Tue, 31 Dec 2024 17:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/december-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>November 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/november-2024-cbl-work/</link>
      <pubDate>Fri, 29 Nov 2024 17:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/november-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>October 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/october-2024-cbl-work/</link>
      <pubDate>Thu, 31 Oct 2024 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/october-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Downstream fixes: These are fixes and improvements that occur in a downstream Linux tree, such as Android or ChromeOS, which our continuous integration regularly tests.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://android-review.googlesource.com/c/kernel/common/&amp;#43;/3311875&#34;&gt;&lt;code&gt;ANDROID: GKI: Put vendor_data_pad behind CONFIG_GKI_DYNAMIC_TASK_STRUCT_SIZE&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Miscellaneous fixes and improvements: These are fixes and improvements that don&amp;rsquo;t fit into a particular category but are important to ClangBuiltLinux.&lt;/p&gt;</description>
    </item>
    <item>
      <title>September 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/september-2024-cbl-work/</link>
      <pubDate>Mon, 30 Sep 2024 15:15:00 +0100</pubDate>
      <guid>https://nathanchance.dev/posts/september-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>August 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/august-2024-cbl-work/</link>
      <pubDate>Fri, 30 Aug 2024 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/august-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Miscellaneous fixes and improvements: These are fixes and improvements that don&amp;rsquo;t fit into a particular category but are important to ClangBuiltLinux.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hexagon: Disable constant extender optimization for LLVM prior to 19.1.0&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/20240819-hexagon-disable-constant-expander-pass-v1-1-36a734e9527d@kernel.org/&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ACPI: platform-profile: Fix CFI violation when accessing sysfs files&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/20240819-acpi-platform_profile-fix-cfi-violation-v1-1-479365d848f6@kernel.org/&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Warning fixes: These are patches to fix various warnings that appear with LLVM. I used to go into detail about the different warnings and what they mean, but the important takeaway for this section is that the kernel should build warning free, as &lt;a href=&#34;https://lore.kernel.org/r/CAHk-=wifoM9VOp-55OZCRcO9MnqQ109UTuCiXeZ-eyX_JcNVGg@mail.gmail.com/&#34;&gt;all developers should be using &lt;code&gt;CONFIG_WERROR&lt;/code&gt;&lt;/a&gt;, which will turn these all into failures. Maybe these should be in the build failures section&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>July 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/july-2024-cbl-work/</link>
      <pubDate>Wed, 31 Jul 2024 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/july-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>June 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/june-2024-cbl-work/</link>
      <pubDate>Fri, 28 Jun 2024 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/june-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>May 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/may-2024-cbl-work/</link>
      <pubDate>Fri, 31 May 2024 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/may-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>April 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/april-2024-cbl-work/</link>
      <pubDate>Tue, 30 Apr 2024 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/april-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>March 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/march-2024-cbl-work/</link>
      <pubDate>Fri, 29 Mar 2024 14:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/march-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>February 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/february-2024-cbl-work/</link>
      <pubDate>Thu, 29 Feb 2024 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/february-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>January 2024 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/january-2024-cbl-work/</link>
      <pubDate>Wed, 31 Jan 2024 17:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/january-2024-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>2023 ClangBuiltLinux Retrospective</title>
      <link>https://nathanchance.dev/posts/2023-cbl-retrospective/</link>
      <pubDate>Thu, 28 Dec 2023 12:00:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/2023-cbl-retrospective/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://nathanchance.dev/posts/2022-cbl-retrospective/&#34;&gt;Just like I did last year&lt;/a&gt;, I want to do a yearly report/retrospective for 2023 to look at what I (and the whole ClangBuiltLinux team in some cases) accomplished. I do monthly reports but looking at a high level across the year helps put things into perspective and drive improvements going into the new year.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel&#34;&gt;Linux kernel&lt;/h2&gt;
&lt;p&gt;This year, I had 129 commits accepted into maintainer trees (not all will be merged into mainline in 2023 but they were written and added in maintainer trees in 2023). They can be viewed on the web or by running the following command in an up-to-date Linux repository locally:&lt;/p&gt;</description>
    </item>
    <item>
      <title>December 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/december-2023-cbl-work/</link>
      <pubDate>Thu, 28 Dec 2023 11:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/december-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Miscellaneous fixes and improvements: These are fixes and improvements that don&amp;rsquo;t fit into a particular category but are important to ClangBuiltLinux.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RISC-V: Disable DWARF5 with known broken LLVM versions&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/20231205-riscv-restrict-dwarf5-llvm-v2-0-aedf00a382ac@kernel.org/&#34;&gt;&lt;code&gt;v2&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stable backports and fixes: It is important to make sure that the stable trees are as free from issues as possible, as those are the trees that devices and users use; for example, Android and Chrome OS regularly merge from stable, so if there is a problem that will impact those trees that we fixed in mainline, it should be backported.&lt;/p&gt;</description>
    </item>
    <item>
      <title>November 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/november-2023-cbl-work/</link>
      <pubDate>Thu, 30 Nov 2023 17:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/november-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>October 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/october-2023-cbl-work/</link>
      <pubDate>Tue, 31 Oct 2023 16:15:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/october-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>September 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/september-2023-cbl-work/</link>
      <pubDate>Fri, 29 Sep 2023 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/september-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>August 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/august-2023-cbl-work/</link>
      <pubDate>Thu, 31 Aug 2023 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/august-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>July 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/july-2023-cbl-work/</link>
      <pubDate>Mon, 31 Jul 2023 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/july-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>June 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/june-2023-cbl-work/</link>
      <pubDate>Fri, 30 Jun 2023 13:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/june-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>May 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/may-2023-cbl-work/</link>
      <pubDate>Wed, 31 May 2023 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/may-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Warning fixes: These are patches to fix various warnings that appear with LLVM. I used to go into detail about the different warnings and what they mean, but the important takeaway for this section is that the kernel should build warning free, as &lt;a href=&#34;https://lore.kernel.org/r/CAHk-=wifoM9VOp-55OZCRcO9MnqQ109UTuCiXeZ-eyX_JcNVGg@mail.gmail.com/&#34;&gt;all developers should be using &lt;code&gt;CONFIG_WERROR&lt;/code&gt;&lt;/a&gt;, which will turn these all into failures. Maybe these should be in the build failures section&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>April 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/april-2023-cbl-work/</link>
      <pubDate>Fri, 28 Apr 2023 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/april-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>March 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/march-2023-cbl-work/</link>
      <pubDate>Fri, 31 Mar 2023 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/march-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>February 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/february-2023-cbl-work/</link>
      <pubDate>Tue, 28 Feb 2023 17:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/february-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Downstream fixes: These are fixes and improvements that occur in a downstream Linux tree, such as Android or ChromeOS, which our continuous integration regularly tests.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://android-review.googlesource.com/q/I235cef7c848a7cf9df9d7d5343af33d95b501a15&#34;&gt;&lt;code&gt;ANDROID: GKI: Fix copying of protected_exports&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Miscellaneous fixes and improvements: These are fixes and improvements that don&amp;rsquo;t fit into a particular category but are important to ClangBuiltLinux.&lt;/p&gt;</description>
    </item>
    <item>
      <title>January 2023 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/january-2023-cbl-work/</link>
      <pubDate>Tue, 31 Jan 2023 17:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/january-2023-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Downstream fixes: These are fixes and improvements that occur in a downstream Linux tree, such as Android or ChromeOS, which our continuous integration regularly tests.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://android-review.googlesource.com/c/kernel/common/&amp;#43;/2395938&#34;&gt;&lt;code&gt;ANDROID: fuse: Restore upstream type of bitfields in fuse_args&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Miscellaneous fixes: These are fixes and improvements that don&amp;rsquo;t fit into a particular category but are important to ClangBuiltLinux.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022 ClangBuiltLinux Retrospective</title>
      <link>https://nathanchance.dev/posts/2022-cbl-retrospective/</link>
      <pubDate>Fri, 30 Dec 2022 11:00:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/2022-cbl-retrospective/</guid>
      <description>&lt;p&gt;I have been contracting for the Linux Foundation for two years now, going onto the third, and it dawned on me that I have never done a retrospective or yearly report. This is useful for looking back on the year&amp;rsquo;s worth of accomplishments, both to understand how much I have evolved and to look for areas that I would like to improve upon going forward. I have struggled with imposter syndrome for as long as I have been involved with the kernel community, so looking back to give credit where credit is due for particular solutions is a good way to try and combat that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>December 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/december-2022-cbl-work/</link>
      <pubDate>Fri, 30 Dec 2022 11:00:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/december-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Miscellaneous fixes: These are fixes and improvements that don&amp;rsquo;t fit into a particular category but are important to ClangBuiltLinux.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Fix lack of section mismatch warnings with LTO&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/20221207191657.2852229-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;v2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://lore.kernel.org/20221213183529.766630-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;v3&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security: Restrict CONFIG_ZERO_CALL_USED_REGS to gcc or clang &amp;gt; 15.0.6&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/20221214232602.4118147-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Warning fixes: These are patches to fix various warnings that appear with LLVM (or in the case of the first one, with GCC as the result of a patch series for ClangBuiltLinux). I used to go into detail about the different warnings and what they mean, but the important takeaway for this section is that the kernel should build warning free, as &lt;a href=&#34;https://lore.kernel.org/r/CAHk-=wifoM9VOp-55OZCRcO9MnqQ109UTuCiXeZ-eyX_JcNVGg@mail.gmail.com/&#34;&gt;all developers should be using &lt;code&gt;CONFIG_WERROR&lt;/code&gt;&lt;/a&gt;, which will turn these all into failures. Maybe these should be in the build failures section&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>November 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/november-2022-cbl-work/</link>
      <pubDate>Wed, 30 Nov 2022 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/november-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>October 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/october-2022-cbl-work/</link>
      <pubDate>Mon, 31 Oct 2022 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/october-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>September 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/september-2022-cbl-work/</link>
      <pubDate>Thu, 29 Sep 2022 15:55:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/september-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>August 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/august-2022-cbl-work/</link>
      <pubDate>Wed, 31 Aug 2022 16:15:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/august-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Miscellaneous fixes and improvements: These are fixes and improvements that don&amp;rsquo;t fit into a particular category but are important to ClangBuiltLinux.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scripts/Makefile.extrawarn: Do not disable clang&#39;s -Wformat-zero-length&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/20220810230133.1895778-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x86/build: Move &#39;-mindirect-branch-cs-prefix&#39; out of GCC-only block&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/20220817185410.1174782-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stable backport requests: It is important to make sure that the stable trees are as free from issues as possible, as those are the trees that devices and users use; for example, Android and Chrome OS regularly merge from stable, so if there is a problem that will impact those trees that we fixed in mainline, it should be backported.&lt;/p&gt;</description>
    </item>
    <item>
      <title>July 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/july-2022-cbl-work/</link>
      <pubDate>Fri, 29 Jul 2022 16:00:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/july-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>June 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/june-2022-cbl-work/</link>
      <pubDate>Thu, 30 Jun 2022 16:25:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/june-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Android changes: Android is one of the largest downstream consumers of our work. Our continuous integeration tests the Android trees with newer versions of LLVM to help catch any issues that will impact Android once they upgrade their version of LLVM, which can lag behind at times.&lt;/p&gt;</description>
    </item>
    <item>
      <title>May 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/may-2022-cbl-work/</link>
      <pubDate>Tue, 31 May 2022 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/may-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>April 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/april-2022-cbl-work/</link>
      <pubDate>Fri, 29 Apr 2022 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/april-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build failures: These are patches to fix various build errors that I found through testing different configurations with LLVM or were exposed by our continuous integration setup. The kernel needs to build in order to be run :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>March 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/march-2022-cbl-work/</link>
      <pubDate>Thu, 31 Mar 2022 16:30:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/march-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Boot fixes: These patches fix boot failures that we have seen in testing. In this case, it is a User Mode Linux fix, which we are looking to enable in our continuous integration setup, as it is useful for quick testing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>February 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/february-2022-cbl-work/</link>
      <pubDate>Mon, 28 Feb 2022 00:17:30 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/february-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Miscellaneous improvements: These are series or patches that do not really fit into any of the other categories I typically use with my reports.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Allow CONFIG_DEBUG_INFO_DWARF5=y + CONFIG_DEBUG_INFO_BTF=y&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/r/20220201205624.652313-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tools/resolve_btfids: Do not print any commands when building silently&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/r/20220201212503.731732-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-Wenum-conversion&lt;/code&gt;: This warning occurs when one enumerated type is implicitly converted to another enumerated type, which is typically a bug, although it might not actually be a problem in practice if the used enum has the same value as the intended enum (which is the case here). It is still good to get it corrected, as the enums might not stay in sync.&lt;/p&gt;</description>
    </item>
    <item>
      <title>January 2022 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/january-2022-cbl-work/</link>
      <pubDate>Mon, 31 Jan 2022 00:18:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/january-2022-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Stable patches: The stable trees are the trees that most users consume so keeping them building and as warning and issue free as reasonable is important.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[PATCH 5.4] Input: touchscreen - Fix backport of a02dcde595f7cbd240ccd64de96034ad91cffc40&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/r/20220103192935.3438038-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[PATCH RFC 4.9 0/5] Fix booting arm64 big endian with QEMU 5.0.0+&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/r/20220107194335.3090066-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[PATCH 4.4,4.9] power: reset: ltc2952: Fix use of floating point literals&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/r/20220109185902.1097931-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lore.kernel.org/r/YeCpzLnfA&amp;#43;g&amp;#43;u3Id@archlinux-ax161/&#34;&gt;&lt;code&gt;Patches for clang and CONFIG_WERROR (arm64/x86_64)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-Wpointer-bool-conversion&lt;/code&gt;: This warning is usually harmless, as it is typically just a developer checking if an array in the middle of a structure is &lt;code&gt;NULL&lt;/code&gt;, which is not possible if the structure is not &lt;code&gt;NULL&lt;/code&gt;, which would likely cause issues further up a call chain. In this one case, the fix was just to remove the check.&lt;/p&gt;</description>
    </item>
    <item>
      <title>December 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/december-2021-cbl-work/</link>
      <pubDate>Fri, 31 Dec 2021 12:00:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/december-2021-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Android patches: Android is one of the biggest downstream consumers of our work. Making sure that it stays working is incredibly important so that it can reach real users.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://android-review.googlesource.com/c/kernel/common/&amp;#43;/1907758&#34;&gt;&lt;code&gt;Revert &amp;quot;ANDROID: disable INFINIBAND_QIB from allmodconfig build&amp;quot;&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://android-review.googlesource.com/c/kernel/common/&amp;#43;/1907759&#34;&gt;&lt;code&gt;ANDROID: allmodconfig: Re-enable TEST_KMOD&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>November 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/november-2021-cbl-work/</link>
      <pubDate>Tue, 30 Nov 2021 16:23:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/november-2021-cbl-work/</guid>
      <description>&lt;p&gt;Occasionally, I will forget to link something from the mailing list in this post. To see my full mailing list activity (patches, reviews, and reports), you can view it on &lt;a href=&#34;https://lore.kernel.org/all/?q=f:nathan@kernel.org&#34;&gt;lore.kernel.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build errors: These are hard errors that appear for one reason or another. The first two are from a recent change in LLVM to avoid crashing the compiler (see the commit message for more details, I learned floating point literals exist in C). The third series is a resend that fixes &lt;code&gt;ARCH=hexagon&lt;/code&gt; allmodconfig, which is an important target for us because &lt;code&gt;ARCH=hexagon&lt;/code&gt; requires LLVM. Lastly, the final series fixes a generic issue uncovered by the kernel test robot with an &lt;code&gt;ARCH=hexagon&lt;/code&gt; randconfig.&lt;/p&gt;</description>
    </item>
    <item>
      <title>October 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/october-2021-cbl-work/</link>
      <pubDate>Fri, 29 Oct 2021 14:10:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/october-2021-cbl-work/</guid>
      <description>&lt;p&gt;This was a bit of a shorter month for me, as I took some vacation at the beginning of the month to recouperate and meet half of my girlfriend&amp;rsquo;s extended family and friends for the first time. Thankfully, the rest of the ClangBuiltLinux team was able to keep everything churning along in my absence and I was able to be super productive the rest of the month once I returned.&lt;/p&gt;</description>
    </item>
    <item>
      <title>September 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/september-2021-cbl-work/</link>
      <pubDate>Thu, 30 Sep 2021 10:00:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/september-2021-cbl-work/</guid>
      <description>&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tools: compiler-gcc.h: Guard error attribute use with __has_attribute&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/r/20210913220900.142820-1-nathan@kernel.org/&#34;&gt;v1&lt;/a&gt;): The minimum version of GCC was raised to 5.1, which helped simplify a lot of code but caused issues for older versions of clang. This helps resolve it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Harden clang against unknown flag options&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/r/20210916184017.1881473-1-nathan@kernel.org/&#34;&gt;v2&lt;/a&gt;): A follow up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ptp: ocp: Avoid operator precedence warning in ptp_ocp_summary_show()&lt;/code&gt; (&lt;a href=&#34;https://lore.kernel.org/r/20210916194351.3860836-1-nathan@kernel.org/&#34;&gt;v1&lt;/a&gt;, &lt;a href=&#34;https://lore.kernel.org/netdev/20210917045204.1385801-1-nathan@kernel.org/&#34;&gt;v2&lt;/a&gt;): An interesting warning around operator precedence, which will not be an issue in practice but now that Linus has decreed that warnings are unacceptable, it is important to clean them up!&lt;/p&gt;</description>
    </item>
    <item>
      <title>August 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/august-2021-cbl-work/</link>
      <pubDate>Tue, 31 Aug 2021 20:38:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/august-2021-cbl-work/</guid>
      <description>&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lore.kernel.org/r/20210802175820.3153920-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;[PATCH] dmaengine: idxd: Remove unused status variable in irq_process_work_list()&lt;/code&gt;&lt;/a&gt;: Not a clang specific warning but it impacts builds where I use &lt;code&gt;-Werror&lt;/code&gt;, as kernel builds should be as warning clean as possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lore.kernel.org/r/20210802190351.3201677-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;[PATCH] ASoC: Intel: boards: Fix CONFIG_SND_SOC_SDW_MOCKUP select&lt;/code&gt;&lt;/a&gt;: Not a clang specific warning but Kconfig warnings such as this can potentially be build errors later due to incorrect dependency selection so it is important to fix them when they pop up.&lt;/p&gt;</description>
    </item>
    <item>
      <title>July 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/july-2021-cbl-work/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/july-2021-cbl-work/</guid>
      <description>&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lore.kernel.org/r/20210708233849.3140194-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;[PATCH] Hexagon: Export raw I/O routines for modules&lt;/code&gt;&lt;/a&gt;: Hexagon is a digital signal processor architecture by Qualcomm, which is a little special in terms of the Linux kernel because it is the only architecture that does not have a GCC backend so LLVM has to be used to build it, meaning that it is important to keep it building. This patch fixes an issue with &lt;code&gt;allmodconfig&lt;/code&gt;, which enables us to build a wide variety of code and verify the compiler is able to handle all of it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>June 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/june-2021-cbl-work/</link>
      <pubDate>Thu, 01 Jul 2021 13:48:16 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/june-2021-cbl-work/</guid>
      <description>&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://android-review.googlesource.com/c/kernel/common/&amp;#43;/1725551&#34;&gt;&lt;code&gt;ANDROID: sched: Gate sched_stat tracepoint exports on CONFIG_SCHEDSTATS&lt;/code&gt;&lt;/a&gt;: One of those instances where a tangential change in the Android trees broke our continuous integration. Our CI tests some 32-bit ARM configurations because certain Android OEMs care about them but these configs are not tested by the actual Android team, meaning we find breakage that they do not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lore.kernel.org/r/20210603165612.2088040-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;[PATCH net-next] net: ks8851: Make ks8851_read_selftest() return void&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;clang&lt;/code&gt; implemented GCC&amp;rsquo;s &lt;code&gt;-Wunused-but-set-variable&lt;/code&gt; and this instance was found by Intel&amp;rsquo;s kernel test robot. Rather simple fix but it is important to fix warnings as they crop up so that the build stays as clean as possible so that the real issues are easily visible.&lt;/p&gt;</description>
    </item>
    <item>
      <title>May 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/may-2021-cbl-work/</link>
      <pubDate>Tue, 01 Jun 2021 08:29:00 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/may-2021-cbl-work/</guid>
      <description>&lt;p&gt;This month felt longer than others but I feel like that was because I was a lot more spread out in the work that I was doing. Let&amp;rsquo;s dive in, shall we?&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches--backports&#34;&gt;Linux kernel patches / backports&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lore.kernel.org/r/20210505182808.3855516-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;[PATCH] fbmem: Correct position of &#39;__maybe_unused&#39; in proc_fb_seq_ops&lt;/code&gt;&lt;/a&gt;: A common mistake people make is splitting &amp;ldquo;struct &lt;name&gt;&amp;rdquo; with an attribute, in this case &amp;ldquo;__maybe_unused&amp;rdquo;, which clang warns about while GCC does not. This causes a warning in all of our builds. Unfortunately, this patch did not actually make it into mainline because &lt;a href=&#34;https://git.kernel.org/linus/6dae40aed484ef2f1a3934dcdcd17b7055173e56&#34;&gt;Linus fixed it himself&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>April 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/april-2021-cbl-work/</link>
      <pubDate>Fri, 30 Apr 2021 21:14:13 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/april-2021-cbl-work/</guid>
      <description>&lt;p&gt;Another month down! Feels like I just wrote the March 2021 post&amp;hellip; but I suppose that is what happens when your project moves super quickly :)&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lore.kernel.org/r/20210407213048.940498-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;[PATCH] ACPI / CPPC: Replace cppc_attr with kobj_attribute&lt;/code&gt;&lt;/a&gt;: I discovered this issue as part of my testing of Sami Tolvanen&amp;rsquo;s Control Flow Integrity series (more on that below). There are probably &lt;a href=&#34;https://lore.kernel.org/r/202006112217.2E6CE093@keescook/&#34;&gt;many more of these lurking&lt;/a&gt; because this pattern is hard to spot without runtime testing. As I have time amongst all of the other issues and such, I will be testing the x86 variant of CFI on several different servers, trying to flush out all of the different issues there.&lt;/p&gt;</description>
    </item>
    <item>
      <title>March 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/march-2021-cbl-work/</link>
      <pubDate>Thu, 01 Apr 2021 10:25:53 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/march-2021-cbl-work/</guid>
      <description>&lt;p&gt;Another month, another post about the work that I have done as a kernel/compiler developer! One of the highlights this month is that I got LLVM commit access so I can merge my own patches into LLVM, which I did twice so far.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lore.kernel.org/r/20210302195013.2626335-1-nathan@kernel.org/&#34;&gt;&lt;code&gt;powerpc/fadump: Mark fadump_calculate_reserve_size as __init&lt;/code&gt;&lt;/a&gt;: LLVM 13 switched over to the &lt;a href=&#34;https://blog.llvm.org/posts/2021-03-26-the-new-pass-manager/&#34;&gt;New Pass Manager (NPM)&lt;/a&gt;, which has impacted some inlining decisions, which in turn exposed some bugs in section annotations. The kernel places certain functions and variables into specific sections that are discarded and freed after init. If a non-init function calls an init function, that is technically a use-after-free so the kernel warns when this happens. In this particular case, &lt;code&gt;identical_pvr_fixup()&lt;/code&gt; was not marked as &lt;code&gt;__init&lt;/code&gt; and it was not getting inlined so the calls to &lt;code&gt;identify_cpu()&lt;/code&gt; and &lt;code&gt;of_get_flat_dt_prop()&lt;/code&gt; resulting in the modpost warnings. In practice, this is not an issue because &lt;code&gt;identical_pvr_fixup()&lt;/code&gt; is only called from &lt;code&gt;__init&lt;/code&gt; context but it is important to get these things right so that real warnings can easily be caught.&lt;/p&gt;</description>
    </item>
    <item>
      <title>February 2021 ClangBuiltLinux Work</title>
      <link>https://nathanchance.dev/posts/february-2021-cbl-work/</link>
      <pubDate>Sun, 28 Feb 2021 00:01:20 -0700</pubDate>
      <guid>https://nathanchance.dev/posts/february-2021-cbl-work/</guid>
      <description>&lt;p&gt;As some of you may or may not know by now, I am &lt;a href=&#34;https://www.linuxfoundation.org/en/press-release/google-funds-linux-kernel-developers-to-focus-exclusively-on-security/&#34;&gt;now employed&lt;/a&gt; by the Linux Foundation to help improve Linux security. The primary way that I am doing that is through the work I do for &lt;a href=&#34;https://clangbuiltlinux.github.io/&#34;&gt;ClangBuiltLinux&lt;/a&gt;, of which I am an &lt;a href=&#34;https://git.kernel.org/linus/b9644289657748314dbfe6502c316b3f09e251ed&#34;&gt;official maintainer&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;linux-kernel-patches&#34;&gt;Linux kernel patches&lt;/h2&gt;
&lt;p&gt;First and foremost, I am a Linux kernel developer, meaning that I love sending kernel patches. Getting familiar with &lt;code&gt;git send-email&lt;/code&gt; and the standard Linux kernel workflow can be difficult but now that I am used to it, I find other things cumbersome.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
